[
  {
    "ContainingType": "AppointmentController",
    "Method": "GeneratePDF",
    "RelativePath": "api/appointment/generate-pdf",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointment",
        "Type": "AngularAuthApi.Models.AppointmentModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AiChatController",
    "Method": "AnalyzeSymptoms",
    "RelativePath": "api/chat/analyze-symptoms",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AngularAuthApi.Models.SymptomRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AiChatController",
    "Method": "AskGroq",
    "RelativePath": "api/chat/ask",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "ChatRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AngularAuthApi.Controllers.DoctorsController",
    "Method": "GetDoctors",
    "RelativePath": "api/Doctors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AngularAuthApi.Controllers.DoctorsController",
    "Method": "CreateDoctor",
    "RelativePath": "api/Doctors",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "doctor",
        "Type": "AngularAuthApi.Models.Doctor",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AngularAuthApi.Controllers.DoctorsController",
    "Method": "GetDoctor",
    "RelativePath": "api/Doctors/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AngularAuthApi.Controllers.UserController",
    "Method": "Authenticate",
    "RelativePath": "api/User/authenticate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userObj",
        "Type": "AngularAuthApi.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AngularAuthApi.Controllers.UserController",
    "Method": "RegisterUser",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userObj",
        "Type": "AngularAuthApi.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AngularAuthApi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AngularAuthApi.WeatherForecast, AngularAuthApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]